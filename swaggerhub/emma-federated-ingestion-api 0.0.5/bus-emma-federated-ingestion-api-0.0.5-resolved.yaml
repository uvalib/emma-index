---
openapi: 3.0.0
info:
  title: EMMA Federated Index Ingestion API
  description: API for submitting metadata to the EMMA Federated Search Index
  contact:
    email: bookshare-developers@benetech.org
  license:
    name: TBD
  version: 0.0.5
servers:
- url: /
tags:
- name: ingestion
  description: Operations on metadata submitted to EMMA federated search index
paths:
  /records:
    put:
      tags:
      - ingestion
      summary: Inserts or updates metadata records in the search index
      description: "Inserts, or updates one or more metadataRecords in the search index.  For the upsert operation, if no such record exists for the emma_repository, emma_repositoryRecordId, dc_format, and emma_formatVersion, a record is created.  Otherwise the existing record is updated. emma_formatVersion is optional.  The number of records to be updated at once is capped at 1000."
      operationId: upsertRecords
      requestBody:
        description: Ingestion metadata record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestionRecordList'
      responses:
        "202":
          description: Items accepted for update.
        "207":
          description: Some items inserted or updated
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                description: "List of errors, mapped to the numbered metadata record in the order received"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                description: "List of errors, mapped to the numbered metadata record in the order received"
  /recordGets:
    post:
      tags:
      - ingestion
      summary: Retrieves metadata records in the search index
      description: "Retrieves one or more metadataRecords in the search index. Records are uniquely identified by the emma_repository, emma_repositoryRecordId, dc_format, and emma_formatVersion.  emma_formatVersion is optional.  The number of records to be retrieved at once is capped at 1000."
      operationId: getRecords
      requestBody:
        description: Metadata identifier record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifierRecordList'
      responses:
        "200":
          description: Items retrieved
          content:
            application/json:
              schema:
                type: array
                description: "May be returned by upsert operation.  List of errors, mapped to the numbered metadata record in the order received"
                items:
                  $ref: '#/components/schemas/MetadataRecord'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                description: "List of errors, mapped to the numbered metadata record in the order received"
  /recordDeletes:
    post:
      tags:
      - ingestion
      summary: Deletes metadata records in the search index
      description: "Deletes one or more metadataRecords in the search index. Records are uniquely identified by the emma_repository, emma_repositoryRecordId, dc_format, and emma_formatVersion.  emma_formatVersion is optional.   The number of records to be deleted at once is capped at 1000."
      operationId: deleteRecords
      requestBody:
        description: Metadata identifier record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifierRecordList'
      responses:
        "202":
          description: Items accepted for deletion.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                description: "If applicable, a list of \"not found\" records that could not be deleted will appear in the result body.  Otherwise the result body will be empty."
        "207":
          description: Some items deleted
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                description: "May be returned by upsert or delete operation.  List of errors, mapped to the numbered metadata record in the order received"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                description: "List of errors, mapped to the numbered metadata record in the order received"
components:
  schemas:
    IngestionRecordList:
      title: Metadata ingestion record list request
      type: array
      description: List of metadata ingestion records
      items:
        $ref: '#/components/schemas/IngestionRecord'
    IdentifierRecordList:
      title: List of identifier records
      type: array
      description: List of metadata record identifiers
      items:
        $ref: '#/components/schemas/IdentifierRecord'
    IngestionRecord:
      title: Metadata ingestion schema for EMMA Federated Search Index
      required:
      - dc_format
      - dc_title
      - emma_repository
      - emma_repositoryRecordId
      - emma_retrievalLink
      type: object
      description: Schema for JSON metadata records to be submitted to the EMMA Federated Search Index ingestion service.
      allOf:
      - $ref: '#/components/schemas/MetadataCommonRecord'
    IdentifierRecord:
      title: Metadata to uniquely identify a record in the EMMA Federated Search Index
      type: object
      description: "Schema to identify a single metadata record in the EMMA Federated Search index, for deleting or retrieval, for example."
      oneOf:
      - required:
        - emma_recordId
        properties:
          emma_recordId:
            $ref: '#/components/schemas/EmmaRecordIdentifier'
      - required:
        - dc_format
        - emma_repository
        - emma_repositoryRecordId
        properties:
          emma_repository:
            $ref: '#/components/schemas/EmmaRepository'
          emma_repositoryRecordId:
            $ref: '#/components/schemas/EmmaRepositoryRecordId'
          emma_formatVersion:
            $ref: '#/components/schemas/EmmaFormatVersion'
          dc_format:
            $ref: '#/components/schemas/DublinCoreFormat'
    MetadataRecord:
      title: Metadata record schema for EMMA Federated Search Index
      type: object
      description: Schema for JSON documents which are retrieved from the EMMA Federated Search Index ingestion service.
      allOf:
      - properties:
          emma_recordId:
            $ref: '#/components/schemas/EmmaRecordIdentifier'
          emma_titleId:
            type: string
            description: The unique identifier for a work within the EMMA Federated Search Index
          related_records:
            type: array
            description: |
              [EXPERIMENTAL] a group of records with the same emma_repositoryRecordId or emma_titleId
            items:
              type: object
              allOf:
              - properties:
                  emma_recordId:
                    $ref: '#/components/schemas/EmmaRecordIdentifier'
                  emma_titleId:
                    type: string
                    description: The unique identifier for a work within the EMMA Federated Search Index
              - $ref: '#/components/schemas/MetadataCommonRecord'
      - $ref: '#/components/schemas/MetadataCommonRecord'
      - required:
        - emma_recordId
    MetadataCommonRecord:
      title: Metadata Common Fields
      type: object
      description: Fields common to metadata ingestion records and search results.
      allOf:
      - $ref: '#/components/schemas/EmmaCommonFields'
      - $ref: '#/components/schemas/DublinCoreFields'
      - $ref: '#/components/schemas/PeriodicalFields'
      - $ref: '#/components/schemas/SchemaOrgFields'
      - $ref: '#/components/schemas/RemediationFields'
    EmmaRecordIdentifier:
      title: EMMA metadata record identifier
      type: string
      description: The unique identifier for a metadata record within the EMMA Federated Search Index.  Not guaranteed to have any particular format.
    EmmaRepository:
      type: string
      description: Identifier for a repository
      enum:
      - bookshare
      - hathiTrust
      - internetArchive
      - emma
    EmmaRepositoryRecordId:
      type: string
      description: The unique identifier for a work within a repository
    EmmaFormatVersion:
      type: string
      description: Version of the format used by this instance of this work
    DublinCoreFormat:
      type: string
      description: |
        [Format](https://www.dublincore.org/specifications/dublin-core/dcm\
        i-terms/terms/format/) of this instance of the work.
        * `brf` - Braille Ready Format
        * `daisy` - [DAISY](https://daisy.org) digital talking book
        * `daisyAudio` - DAISY book with audio files
        * `epub` - EPUB digital document
        * `braille` - Braille formats that are not BRF (such as printed)
        * `pdf` - PDF
        * `word` - Microsoft Word
        * `tactile` - Tactile graphics
        * `kurzweil` - Kurzweil file format
        * `rtf` - Rich text format
        * `grayscalePdf` - [DEPRECATED] Use pdf instead.
      enum:
      - brf
      - daisy
      - daisyAudio
      - epub
      - braille
      - pdf
      - grayscalePdf
      - word
      - tactile
      - kurzweil
      - rtf
    PublicationIdentifier:
      title: Non-Periodical Publication Identifier
      pattern: "^((isbn|upc|issn):[0-9Xx\\-]{8,17}|lccn:[a-zA-Z0-9]{1,12}|oclc:\\d{1,14}|doi:(https:\\/\\/doi.org\\/)?10\\.\\d{4,}.{0,300})$"
      type: string
      description: |
        The lowercase scheme and identifier for a non-periodical publication or single episode or issue
        of a periodical. Only alphanumeric characters are accepted. No spaces or other symbols are accepted.
        Dashes will be stripped from the stored identifier.
        Accepted schemes are ISBN, LCCN, UPC, OCLC, and DOI.  ISSN is deprecated in this field.

        Examples:
        - ISBN: `isbn:9788665654189`
        - LCCN: `lccn:a2002003456`
        - UPC: `upc:025192251344`
        - OCLC: `oclc:1089556637`
        - DOI: `doi:10.1001/jama.2021.15187` or `doi:https://doi.org/10.1001/jama.2021.15187`
    PeriodicalIdentifier:
      title: Periodical Identifier
      pattern: "^((issn|upc):[0-9Xx\\-]{8,17}|oclc:\\d{1,14}|doi:(https:\\/\\/doi.org\\/)?10\\.\\d{4,}.{0,300})$"
      type: string
      description: |
        The lowercase scheme and identifier for a journal, magazine, or other series.
        Only alphanumeric characters are accepted. No spaces or other symbols are accepted.
        Dashes will be stripped from the stored identifier.
        Accepted schemes are ISSN, UPC, OCLC, and DOI.

        Examples:
        - ISSN: `issn:1538-3598`
        - UPC: `upc:025192251344`
        - OCLC: `oclc:231854281`
        - DOI: `doi:10.1001/jama` or or `doi:https://doi.org/10.1001/jama.2021`
    RemediationFields:
      title: Remediation Fields
      type: object
      properties:
        rem_source:
          type: string
          description: The origin of the content on which the remediated file was based.
          enum:
          - bookshare
          - hathiTrust
          - internetArchive
          - emma
          - accessTextNetwork
          - publisher
          - purchased
          - faculty
          - student
          - library
          - otherDso
          - other
        rem_metadataSource:
          type: array
          description: List of the origins of the metadata for the original creative work on which the remediated file was based.
          items:
            type: string
        rem_remediatedBy:
          type: array
          description: "List of the the origins of the remediated file, normally identifies the DSO."
          items:
            type: string
        rem_complete:
          type: boolean
          description: "True if the submission is a presentation of the entire original work; false if the submission only covers certain sections or chapters, or contains gaps or omissions."
        rem_coverage:
          type: string
          description: "For a submission which does not present the entire original work, describe the part(s) which are covered by the submission."
        rem_remediatedAspects:
          type: array
          description: List of the remediations that are provided in this submission.
          items:
            type: string
            enum:
            - scannedAndOcrd
            - proofreadCorrectedOcr
            - addedBookmarks
            - taggedPdf
            - addedImageDescriptions
            - structuredHeadings
            - linkedToc
            - fixedTables
            - addedMathMl
            - foreignLanguageMarkup
            - transcribersNotes
            - annotations
        rem_textQuality:
          type: string
          description: |
            A measure of the quality of the original file on which the submission was based.
              * `rawOcr` - Raw OCR; scanned with OCR but not otherwise processed
              * `cleanedOcr` - Cleaned OCR
              * `rekeyed` - Rekeyed
              * `proofread` - Proofread
              * `published` - Received in an electronic format from the publisher
          enum:
          - rawOcr
          - cleanedOcr
          - rekeyed
          - proofread
          - published
        rem_status:
          type: string
          description: The remediation status of submitted file.
          enum:
          - remediated
          - notRemediated
          - bornAccessible
        rem_remediationDate:
          type: string
          description: "Date that this work was remediated.  This is an [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (YYYY-MM-DD) date."
          format: date
        rem_comments:
          type: string
          description: Comments regarding the remediation on this work
      description: Detailed information about what remediation has been performed on this specific work.
    PeriodicalFields:
      title: Periodical Fields
      type: object
      properties:
        periodical:
          type: boolean
          description: |
            True if we should treat this work like an article, issue, or episode of a periodical; False or absent otherwise.
      description: "Information related to periodical works, such as journals, magazines, and television and podcast series."
    SchemaOrgFields:
      title: Schema.org fields
      type: object
      properties:
        s_accessibilityFeature:
          type: array
          description: "List of accessibility features of this instance derived from the schema.org [Accessibility Feature specification](https://www.w3.org/wiki/WebSchemas/Accessibility#Accessibility_terms_.28Version_2.0.29)."
          items:
            type: string
            enum:
            - alternativeText
            - annotations
            - audioDescription
            - bookmarks
            - braille
            - captions
            - ChemML
            - describedMath
            - displayTransformability
            - displayTransformability/background-color
            - displayTransformability/color
            - displayTransformability/font-height
            - displayTransformability/font-size
            - displayTransformability/line-height
            - displayTransformability/word-spacing
            - highContrastAudio
            - highContrastDisplay
            - index
            - largePrint
            - latex
            - longDescription
            - MathML
            - physicalObject
            - printPageNumbers
            - readingOrder
            - rubyAnnotations
            - signLanguage
            - sound
            - stillImage
            - structuralNavigation
            - synchronizedAudioText
            - tableOfContents
            - tactileGraphic
            - tactileObject
            - taggedPDF
            - timingControl
            - transcript
            - ttsMarkup
            - unlocked
        s_accessibilityControl:
          type: array
          description: "List of accessibility controls of this instance derived from to the schema.org [Accessibility Control specification](https://www.w3.org/wiki/WebSchemas/Accessibility#Accessibility_terms_.28Version_2.0.29)."
          items:
            type: string
            enum:
            - fullAudioControl
            - fullKeyboardControl
            - fullMouseControl
            - fullTouchControl
            - fullVideoControl
            - fullSwitchControl
            - fullVoiceControl
        s_accessibilityHazard:
          type: array
          description: "List of accessibility hazards of this instance as derived from to the schema.org [Accessibility Hazard specification](https://www.w3.org/wiki/WebSchemas/Accessibility#Accessibility_terms_.28Version_2.0.29)."
          items:
            type: string
            enum:
            - flashing
            - noFlashingHazard
            - motionSimulation
            - noMotionSimulationHazard
            - sound
            - noSoundHazard
        s_accessibilityAPI:
          type: array
          description: "List of accessibility APIs of this instance as derived from to the schema.org [Accessibility API specification](https://www.w3.org/wiki/WebSchemas/Accessibility#Accessibility_terms_.28Version_2.0.29)."
          items:
            type: string
            enum:
            - ARIA
        s_accessibilitySummary:
          type: string
          description: "Human-readable summary of accessibility features or deficiencies of this instance of the work as described in the schema.org [Accessibility Summary specification](https://www.w3.org/wiki/WebSchemas/Accessibility#Accessibility_terms_.28Version_2.0.29)"
        s_accessMode:
          type: array
          description: "How the user can perceive this instance of the work as described in the schema.org [Access Mode specification](https://www.w3.org/wiki/WebSchemas/Accessibility#Accessibility_terms_.28Version_2.0.29)."
          items:
            type: string
            enum:
            - auditory
            - chartOnVisual
            - chemOnVisual
            - colorDependent
            - diagramOnVisual
            - mathOnVisual
            - musicOnVisual
            - tactile
            - textOnVisual
            - textual
            - visual
        s_accessModeSufficient:
          type: array
          description: "A list of single or combined access modes that are sufficient to understand all the intellectual content of a resource as described in the schema.org [Access Mode Sufficient specification](https://www.w3.org/wiki/WebSchemas/Accessibility#Accessibility_terms_.28Version_2.0.29)"
          items:
            type: string
            enum:
            - auditory
            - tactile
            - textual
            - visual
      description: Fields derived from schema.org accessibility metadata definitions.
    EmmaCommonFields:
      title: Common Emma Fields
      type: object
      properties:
        emma_repository:
          $ref: '#/components/schemas/EmmaRepository'
        emma_collection:
          type: array
          description: A set of works within a repository
          items:
            type: string
        emma_repositoryRecordId:
          $ref: '#/components/schemas/EmmaRepositoryRecordId'
        emma_retrievalLink:
          type: string
          description: Link to download an actual work from a repository
          format: uri
        emma_webPageLink:
          type: string
          description: Link to a web page which describes a work from a repository
          format: uri
        emma_lastRemediationDate:
          type: string
          description: |
            [DEPRECATED] Date that this work was remediated.  Use `rem_remediationDate` instead.
          format: date
        emma_lastRemediationNote:
          type: string
          description: |
            [DEPRECATED] Comments regarding the remediation on this work.  Use `rem_comments` instead.
        emma_sortDate:
          type: string
          description: "Last date that the work or this index was updated, guaranteeing a non-null value. If available, this defaults to the same value as last remediation date.  If not available, it defaults to date accepted.  If date accepted is not available, it defaults to the date that the record was last updated in this index. The value of sort date is determined at indexing time, and does not need to be sent through the ingestion API."
          format: date
        emma_repositoryUpdateDate:
          type: string
          description: Date that this metadata was last updated in the source repository
          format: date
        emma_repositoryMetadataUpdateDate:
          type: string
          description: |
            [DEPRECATED] Use `emma_repositoryUpdateDate` instead. Date that this metadata was last updated in the source repository
          format: date
        emma_publicationDate:
          type: string
          description: |
            The date that this work was published.  This is an
            [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (YYYY-MM-DD) date or a 4-digit year.
          format: date
        emma_version:
          type: string
          description: |
            Denotes a version or edition for a non-periodical work or a single issue or episode.

            Examples:
            - `Student Edition`
            - `2e`
            - `InitialPub`
            - `Corrected`
            - `Augmented`
        emma_workType:
          type: string
          description: |
            Describes the type of work.
          enum:
          - book
          - video
          - article
          - podcast
        emma_formatVersion:
          $ref: '#/components/schemas/EmmaFormatVersion'
        emma_formatFeature:
          type: array
          description: |
            List of features of the format used by this instance of this work
            * `tts` - Audio generated via Text-to-Speech
            * `human` - Audio read by a human
            * `grade1` - Grade 1 (contracted) Braille
            * `grade2` - Grade 2 (uncontracted) Braille
            * `nemeth` - Nemeth Braille Code for Mathematics and Science Notation
            * `ueb` - Unified English Braille
            * `ebae` - English Braille American Edition (Literary Code)
            * `music` - Music Braille Code.  Could also describe a music subtype of another dc_format.
            * `imagePdf` - PDF that has been scanned as images with no differentiated text
            * `digitalTextPdf` - PDF that contains digital text
            * `literary` - [DEPRECATED] Use `ebae`.
            * `technical` - [DEPRECATED] use `ueb` and/or `nemeth` as applicable.
          items:
            type: string
            enum:
            - tts
            - human
            - grade1
            - grade2
            - nemeth
            - ueb
            - ebae
            - music
            - imagePdf
            - digitalTextPdf
            - literary
            - technical
      description: Fields created for the EMMA project.
    DublinCoreFields:
      title: Dublin Core fields
      type: object
      properties:
        dc_title:
          type: string
          description: |
            The
            [title](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/title/)
            of the work.  Refers to either a non-periodical work such as a book or movie, or the title of a work
            within a periodical, such as an article or episode.

            Examples:
              - Book:
                 - `The Catcher in the Rye`
                 - A book
              - Movie:
                 - `Jaws`
                 - A movie
              - Journal Article:
                 - `A Review of Discourse Markers from the Functional Perspective`
                 - Title of a an article appearing in the _Journal of Arts and Humanities_
              - Podcast Episode:
                 - `741: The Weight of Words`
                 - Title of an episode in the podcast _This American Life_
        dc_creator:
          type: array
          description: "List of [creators](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/creator/) of the work"
          items:
            type: string
        dc_identifier:
          type: array
          description: "List of standard [identifier](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/identifier/) for a work.  In the case of"
          items:
            $ref: '#/components/schemas/PublicationIdentifier'
        dc_publisher:
          type: string
          description: "The name of the [publisher](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/publisher/)"
        dc_relation:
          type: array
          description: "List of standard [identifiers](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/relation/) for related works"
          items:
            $ref: '#/components/schemas/PublicationIdentifier'
        dc_language:
          type: array
          items:
            pattern: "^[a-z]{3}$"
            type: string
            description: "List of codes of the primary [language(s)](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/language/) of the work, using the [ISO 639-2 3-character code](https://www.loc.gov/standards/iso639-2/php/code_list.php)."
        dc_rights:
          type: string
          description: "Ownership-based [usage rights](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/rights/) on the work.  [See the Creative Commons site for descriptions of the specifics of different Creative Commons licenses.](https://creativecommons.org/about/cclicenses/) The generic `creativeCommons` value is [DEPRECATED]."
          enum:
          - publicDomain
          - creativeCommons
          - ccBy
          - ccBySa
          - ccByNa
          - ccByNcSa
          - ccByNd
          - cc0
          - copyright
          - embargo
          - license
          - other
        dc_description:
          type: string
          description: |
            [Description](https://www.dublincore.org/specifications/dublin-cor\
            e/dcmi-terms/terms/description/) of the work; typically a synopsis
        dc_format:
          $ref: '#/components/schemas/DublinCoreFormat'
        dc_type:
          type: string
          description: |
            [DEPRECATED] [Type](https://www.dublincore.org/specifications/dublin-core/dcmi-\
            terms/terms/type/) of this instance of the work
            Use `emma_workType` instead.
          enum:
          - text
          - sound
          - collection
          - dataset
          - event
          - image
          - interactiveResource
          - service
          - physicalObject
          - stillImage
          - movingImage
        dc_subject:
          type: array
          description: "List of [subjects](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/subject/) describing the work."
          items:
            type: string
        dcterms_dateAccepted:
          type: string
          description: "[Date](https://www.dublincore.org/specifications/dublin-core/dcmi-terms/terms/dateAccepted/) that the work was accepted into the repository, using [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format (YYYY-MM-DD)"
          format: date
        dcterms_dateCopyright:
          pattern: "^[0-9]{4}$"
          type: string
          description: |
            [DEPRECATED] The 4-digit year that the work was copyrighted
            Use `emma_publicationDate` instead.
      description: Fields derived from Dublin Core metadata definitions.
